../Src/MotionGenerator/MotionGenerator.cpp:62:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t*, uint16_t)>::_FUN(void*, uint16_t, uint8_t*, uint16_t)	1
../Src/MotionGenerator/MotionGenerator.cpp:74:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t*, uint16_t)>::_FUN(void*, uint16_t, uint8_t*, uint16_t)	2
../Src/MotionGenerator/MotionGenerator.cpp:127:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t**, uint16_t*)>::_FUN(void*, uint16_t, uint8_t**, uint16_t*)	1
../Src/MotionGenerator/MotionGenerator.cpp:90:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t**, uint16_t*)>::_FUN(void*, uint16_t, uint8_t**, uint16_t*)	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:375:7:std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = float; _Alloc = std::allocator<float>]	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:375:7:std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	2
../Src/Registers/Registers.hpp:221:9:uint8_t Registers::GetTypeID(bool*) [with T = long unsigned int]	8
../Src/Registers/Registers.hpp:221:9:uint8_t Registers::GetTypeID(bool*) [with T = float]	8
../Src/Registers/Registers.hpp:221:9:uint8_t Registers::GetTypeID(bool*) [with T = unsigned char]	8
../Src/MotionGenerator/MotionGenerator.cpp:158:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t*, uint16_t)>::_FUN(void*, uint16_t, uint8_t*, uint16_t)	1
../Src/MotionGenerator/MotionGenerator.cpp:180:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t*, uint16_t)>::_FUN(void*, uint16_t, uint8_t*, uint16_t)	1
../Src/MotionGenerator/MotionGenerator.cpp:13:1:MotionGenerator::MotionGenerator()	1
../Src/MotionGenerator/MotionGenerator.cpp:223:6:void MotionGenerator::SetupPublisher()	1
../Src/MotionGenerator/MotionGenerator.cpp:440:6:bool MotionGenerator::SetGeneratorPeriod(uint32_t)	1
../Src/MotionGenerator/MotionGenerator.cpp:478:6:bool MotionGenerator::SetGeneratorOffset(uint8_t, float)	2
../Src/MotionGenerator/MotionGenerator.cpp:147:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, float*, uint16_t)>::_FUN(void*, uint16_t, float*, uint16_t)	2
../Src/MotionGenerator/MotionGenerator.cpp:492:6:bool MotionGenerator::ResetGeneratorOffsets()	1
../Src/MotionGenerator/MotionGenerator.cpp:508:6:bool MotionGenerator::SetPositionOffset(uint8_t, float)	2
../Src/MotionGenerator/MotionGenerator.cpp:169:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, float*, uint16_t)>::_FUN(void*, uint16_t, float*, uint16_t)	2
../Src/MotionGenerator/MotionGenerator.cpp:523:6:bool MotionGenerator::SetModuleLength(float)	1
../Src/MotionGenerator/MotionGenerator.cpp:536:6:bool MotionGenerator::SetGeneratorAmplitude(float)	1
../Src/MotionGenerator/MotionGenerator.cpp:549:6:bool MotionGenerator::SetGeneratorFrequency(float)	1
../Src/MotionGenerator/MotionGenerator.cpp:562:6:bool MotionGenerator::SetGeneratorWavelengthInverse(float)	1
../Src/MotionGenerator/MotionGenerator.cpp:575:6:bool MotionGenerator::SetGeneratorPhase(float)	1
../Src/MotionGenerator/MotionGenerator.cpp:588:10:uint32_t MotionGenerator::GetGeneratorPeriod(bool*)	1
../Src/MotionGenerator/MotionGenerator.cpp:602:9:uint8_t MotionGenerator::GetNumberOfModules(bool*)	1
../Src/MotionGenerator/MotionGenerator.cpp:617:7:float MotionGenerator::GetGeneratorOffset(uint8_t, bool*)	2
../Src/MotionGenerator/MotionGenerator.cpp:633:7:float MotionGenerator::GetPositionOffset(uint8_t, bool*)	2
../Src/MotionGenerator/MotionGenerator.cpp:648:7:float MotionGenerator::GetModuleLength(bool*)	1
../Src/MotionGenerator/MotionGenerator.cpp:662:7:float MotionGenerator::GetGeneratorAmplitude(bool*)	1
../Src/MotionGenerator/MotionGenerator.cpp:676:7:float MotionGenerator::GetGeneratorFrequency(bool*)	1
../Src/MotionGenerator/MotionGenerator.cpp:690:7:float MotionGenerator::GetGeneratorWavelengthInverse(bool*)	1
../Src/MotionGenerator/MotionGenerator.cpp:704:7:float MotionGenerator::GetGeneratorPhase(bool*)	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:364:7:std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = float; _Alloc = std::allocator<float>]	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1954:7:void std::vector<_Tp, _Alloc>::_M_move_assign(std::vector<_Tp, _Alloc>&&, std::true_type) [with _Tp = float; _Alloc = std::allocator<float>]	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:364:7:std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:761:7:std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp, _Alloc>&&) [with _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1173:7:std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::at(size_type) [with _Tp = RegisterCallbacks<unsigned char>; _Alloc = std::allocator<RegisterCallbacks<unsigned char> >]	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1173:7:std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::at(size_type) [with _Tp = RegisterCallbacks<float>; _Alloc = std::allocator<RegisterCallbacks<float> >]	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/vector.tcc:439:7:) [with _Args = {const RegisterConfiguration&}; _Tp = RegisterConfiguration; _Alloc = std::allocator<RegisterConfiguration>]	6
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1276:7:void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = RegisterConfiguration; _Alloc = std::allocator<RegisterConfiguration>]	2
../Src/Registers/Registers.hpp:176:6:bool Registers::AddRegister(uint16_t) [with T = float]	3
../Src/Registers/Registers.hpp:176:6:bool Registers::AddRegister(uint16_t) [with T = unsigned char]	3
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/vector.tcc:439:7:) [with _Args = {const RegisterCallbacks<unsigned char>&}; _Tp = RegisterCallbacks<unsigned char>; _Alloc = std::allocator<RegisterCallbacks<unsigned char> >]	6
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1276:7:void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = RegisterCallbacks<unsigned char>; _Alloc = std::allocator<RegisterCallbacks<unsigned char> >]	2
../Src/Registers/Registers.hpp:416:6:bool Registers::AddReadCallback(uint16_t, void*, bool (*)(void*, uint16_t, T**, uint16_t*)) [with T = unsigned char]	7
../Src/Registers/Registers.hpp:348:6:bool Registers::AddWriteCallback(uint16_t, void*, bool (*)(void*, uint16_t, T*, uint16_t)) [with T = unsigned char]	7
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/vector.tcc:439:7:) [with _Args = {const RegisterCallbacks<long unsigned int>&}; _Tp = RegisterCallbacks<long unsigned int>; _Alloc = std::allocator<RegisterCallbacks<long unsigned int> >]	6
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/vector.tcc:439:7:) [with _Args = {const RegisterCallbacks<float>&}; _Tp = RegisterCallbacks<float>; _Alloc = std::allocator<RegisterCallbacks<float> >]	6
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1276:7:void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = RegisterCallbacks<float>; _Alloc = std::allocator<RegisterCallbacks<float> >]	2
../Src/Registers/Registers.hpp:269:6:bool Registers::AddRegisterPointer(uint16_t, T*) [with T = float]	7
../Src/Registers/Registers.hpp:348:6:bool Registers::AddWriteCallback(uint16_t, void*, bool (*)(void*, uint16_t, T*, uint16_t)) [with T = float]	7
../Src/MotionGenerator/MotionGenerator.cpp:56:6:void MotionGenerator::AddRegisters()	10
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\arm-none-eabi\include\c++\12.3.1\bits\stl_uninitialized.h:655:9:static _ForwardIterator std::__uninitialized_default_n_1<true>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = float*; _Size = unsigned int]	3
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/vector.tcc:628:5:void std::vector<_Tp, _Alloc>::_M_default_append(size_type) [with _Tp = float; _Alloc = std::allocator<float>]	6
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1008:7:void std::vector<_Tp, _Alloc>::resize(size_type) [with _Tp = float; _Alloc = std::allocator<float>]	4
../Src/MotionGenerator/MotionGenerator.cpp:453:6:bool MotionGenerator::SetNumberOfModules(uint8_t)	1
../Src/MotionGenerator/MotionGenerator.cpp:25:6:void MotionGenerator::Init(Registers*, Publishers*, Services*, LEDS*)	1
../Src/MotionGenerator/MotionGenerator.cpp:137:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t*, uint16_t)>::_FUN(void*, uint16_t, uint8_t*, uint16_t)	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1891:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(size_type, const char*) const [with _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/vector.tcc:111:7:) [with _Args = {unsigned char}; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	4
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\arm-none-eabi\include\c++\12.3.1\bits\stl_algobase.h:420:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = unsigned char; bool _IsMove = false]	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:596:7:std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	1
../Src/Communication/Communication.hpp:30:8:MessageElement::MessageElement(const MessageElement&)	1
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/stl_vector.h:1682:2:void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const unsigned char*; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	1
../Src/MotionGenerator/MotionGenerator.cpp:398:6:bool MotionGenerator::SetGeneratorStatus(bool)	2
../Src/MotionGenerator/MotionGenerator.cpp:420:6:bool MotionGenerator::ActivateGenerator()	1
../Src/MotionGenerator/MotionGenerator.cpp:430:6:bool MotionGenerator::DeactivateGenerator()	1
../Src/MotionGenerator/MotionGenerator.cpp:100:3:static bool MotionGenerator::AddRegisters()::<lambda(void*, uint16_t, uint8_t*, uint16_t)>::_FUN(void*, uint16_t, uint8_t*, uint16_t)	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\arm-none-eabi\include\c++\12.3.1\bits\stl_algobase.h:420:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = float; bool _IsMove = false]	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\arm-none-eabi\include\c++\12.3.1\bits\stl_algobase.h:420:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = unsigned char; bool _IsMove = true]	2
C:\ST\STM32CubeIDE_1.16.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.0.200.202406191623\tools\bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/include/c++/12.3.1/bits/vector.tcc:745:7:void std::vector<_Tp, _Alloc>::_M_range_insert(iterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char> >; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	6
../Src/Services/Services.hpp:539:9:uint8_t Services::AccessRemoteRegister(uint8_t*, Register, ServiceInterface, bool, T*, uint16_t, uint8_t) [with T = float]	16
../Src/Services/Services.hpp:539:9:uint8_t Services::AccessRemoteRegister(uint8_t*, Register, ServiceInterface, bool, T*, uint16_t, uint8_t) [with T = unsigned char]	15
../Src/Services/Services.hpp:187:9:uint8_t Services::WriteRemoteRegister(Register, ServiceInterface, T*, uint16_t, uint8_t) [with T = unsigned char]	2
../Src/MotionGenerator/MotionGenerator.cpp:255:6:bool MotionGenerator::ConfigureModules()	7
../Src/MotionGenerator/MotionGenerator.cpp:298:6:bool MotionGenerator::ActivateModuleControllers()	4
../Src/MotionGenerator/MotionGenerator.cpp:323:6:bool MotionGenerator::DeactivateModuleControllers()	2
../Src/MotionGenerator/MotionGenerator.cpp:345:6:void MotionGenerator::Spin()	7
