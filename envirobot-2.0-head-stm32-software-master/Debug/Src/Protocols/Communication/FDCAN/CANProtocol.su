D:/Code/Envirobot2_0_STM32_Head/Src/Protocols/Communication/Core/TemplateCommunicationProtocol.hpp:43:9:uint8_t TemplateCommunicationProtocol<H>::GetID(void*, bool*) [with H = FDCAN_HandleTypeDef]	8	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:10:1:CANProtocol::CANProtocol()	0	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:85:10:uint32_t CANProtocol::GetProtocolLength(uint16_t)	0	static
D:/Code/Envirobot2_0_STM32_Head/Src/Protocols/Communication/Core/TemplateCommunicationProtocol.hpp:34:4:H* TemplateCommunicationProtocol<H>::GetInterface(uint8_t, bool*) [with H = FDCAN_HandleTypeDef]	16	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:29:19:HAL_StatusTypeDef CANProtocol::ConfigureFilters(uint8_t)	24	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:36:19:virtual HAL_StatusTypeDef CANProtocol::ActivateReception(uint8_t)	16	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:43:19:HAL_StatusTypeDef CANProtocol::Start(uint8_t)	16	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:426:7:) [with _Args = {FDCAN_HandleTypeDef* const&}; _Tp = FDCAN_HandleTypeDef*; _Alloc = std::allocator<FDCAN_HandleTypeDef*>]	48	static
D:/Code/Envirobot2_0_STM32_Head/Src/Protocols/Communication/Core/TemplateCommunicationProtocol.hpp:27:6:void TemplateCommunicationProtocol<H>::AddInterface(uint8_t, H*) [with H = FDCAN_HandleTypeDef]	16	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:426:7:) [with _Args = {const FDCAN_TxHeaderTypeDef&}; _Tp = FDCAN_TxHeaderTypeDef; _Alloc = std::allocator<FDCAN_TxHeaderTypeDef>]	48	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:14:6:virtual void CANProtocol::AddInterface(uint8_t, FDCAN_HandleTypeDef*)	56	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:426:7:) [with _Args = {const unsigned char&}; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	48	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:426:7:) [with _Args = {unsigned char}; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	48	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:109:7:) [with _Args = {unsigned char}; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	8	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\stl_iterator.h:1225:5:_Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = unsigned char*; _Container = std::vector<unsigned char>]	0	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:104:15:virtual MessageHeader CANProtocol::DecodeProtocol(uint8_t, std::vector<unsigned char>, uint16_t*, bool*)	72	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\stl_iterator.h:1225:5:_Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const unsigned char*; _Container = std::vector<unsigned char>]	0	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\stl_iterator.h:2291:5:base())) std::__miter_base(std::move_iterator<_IteratorL>) [with _Iterator = unsigned char*]	0	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:721:7:void std::vector<_Tp, _Alloc>::_M_range_insert(std::vector<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char> >; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	56	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:67:22:std::vector<unsigned char> CANProtocol::CodeProtocol(MessageHeader, FDCAN_TxHeaderTypeDef*)	40	static
../Src/Protocols/Communication/FDCAN/CANProtocol.cpp:50:19:virtual HAL_StatusTypeDef CANProtocol::Send(MessageHeader)	144	static
