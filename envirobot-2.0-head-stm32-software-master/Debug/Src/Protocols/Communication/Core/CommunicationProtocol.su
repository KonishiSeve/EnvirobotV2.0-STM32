../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:48:15:virtual MessageHeader CommunicationProtocol::DecodeProtocol(uint8_t, std::vector<unsigned char>, uint16_t*, bool*)	0	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:49:19:virtual HAL_StatusTypeDef CommunicationProtocol::ActivateReception(uint8_t)	0	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:50:19:virtual HAL_StatusTypeDef CommunicationProtocol::Send(MessageHeader)	0	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:51:9:virtual uint8_t CommunicationProtocol::GetID(void*, bool*)	0	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:35:9:uint8_t CommunicationProtocol::GetInterfaceIndex(uint8_t, bool*)	4	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:29:6:bool CommunicationProtocol::InterfaceExists(uint8_t)	16	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:53:9:uint8_t CommunicationProtocol::GetIDFromIndex(uint8_t, bool*)	4	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:63:23:std::vector<unsigned char>* CommunicationProtocol::GetBuffer(uint8_t, bool*)	16	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:70:11:uint16_t* CommunicationProtocol::GetBufferIndex(uint8_t, bool*)	16	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:77:6:void CommunicationProtocol::SetProtocolPayloadMaxLength(uint16_t)	0	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:81:10:uint16_t CommunicationProtocol::GetProtocolPayloadMaxLength()	0	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:66:5:void std::vector<_Tp, _Alloc>::reserve(std::vector<_Tp, _Alloc>::size_type) [with _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	24	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:426:7:) [with _Args = {const unsigned char&}; _Tp = unsigned char; _Alloc = std::allocator<unsigned char>]	48	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:15:6:void CommunicationProtocol::AddInterfaceID(uint8_t)	16	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:426:7:) [with _Args = {short unsigned int}; _Tp = short unsigned int; _Alloc = std::allocator<short unsigned int>]	48	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:109:7:) [with _Args = {short unsigned int}; _Tp = short unsigned int; _Alloc = std::allocator<short unsigned int>]	8	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\stl_iterator.h:1225:5:_Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const unsigned char*; _Container = std::vector<unsigned char>]	0	static
c:\st\stm32cubeide_1.10.1\stm32cubeide\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.10.3-2021.10.win32_1.0.0.202111181127\tools\arm-none-eabi\include\c++\10.3.1\bits\vector.tcc:426:7:) [with _Args = {const std::vector<unsigned char, std::allocator<unsigned char> >&}; _Tp = std::vector<unsigned char>; _Alloc = std::allocator<std::vector<unsigned char> >]	64	static
../Src/Protocols/Communication/Core/CommunicationProtocol.cpp:19:6:void CommunicationProtocol::AddInterfaceBuffer()	64	static
